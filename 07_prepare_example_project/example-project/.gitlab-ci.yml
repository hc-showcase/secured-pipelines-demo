default:
  image: mskaesz/secured-iac-pipelines-demo:latest

stages:
  - prep
  - plan
  - apply

Prep:
  stage: prep
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=${CI_PROJECT_NAME} jwt=${CI_JOB_JWT})"
    - echo "VAULT token is $VAULT_TOKEN"
    - export TFE_TOKEN=$(vault read terraform/creds/user-token -format=json | jq -r ".data.token")
    - echo "TFE token is $TFE_TOKEN"
    - echo "TFE_TOKEN=$TFE_TOKEN">>vars
    - echo "TFE WS name is $TFE_WS_NAME"
    - echo "TFE_ORG name is $TFE_ORG!"
    - echo "TFE_ADDRESS name is $TFE_ADDRESS!"
    - response=$(vault read ${vault_aws_secret_backend_path}/creds/${vault_aws_secret_backend_role} -format=json)
    - AWS_ACCESS_KEY_ID=$(echo $response | jq -r '.data.access_key')
    - AWS_SECRET_ACCESS_KEY=$(echo $response | jq -r '.data.secret_key')
    - tfe-cli variable delete $TFE_WS_NAME vault_aws_secret_backend_path
    - tfe-cli variable delete $TFE_WS_NAME vault_aws_secret_backend_role
    - tfe-cli variable delete $TFE_WS_NAME gitlab_jwt_token
    - tfe-cli variable delete $TFE_WS_NAME gitlab_jwt_role
    - tfe-cli variable delete $TFE_WS_NAME vault_addr
    - tfe-cli variable create $TFE_WS_NAME --var vault_aws_secret_backend_path=$vault_aws_secret_backend_path --var vault_aws_secret_backend_role=${vault_aws_secret_backend_role} --var gitlab_jwt_token=${CI_JOB_JWT} --var gitlab_jwt_role=${CI_PROJECT_NAME} --var vault_addr=${VAULT_ADDR}
  artifacts:
    paths:
      - vars

Plan:
  stage: plan
  dependencies:
    - Prep
  script:
    - |
      cat << EOF > config.remote.tfbackend
      workspaces { name = "$TFE_WS_NAME" }
      hostname     = "$(echo $TFE_ADDRESS |sed 's/https\?:\/\///')"
      organization = "$TFE_ORG"
      token        = "$(cat vars | grep TFE_TOKEN | cut -d = -f2)"
      EOF
    - terraform --version
    - terraform init -backend-config=config.remote.tfbackend
    - terraform plan

Apply:
  image:
    name: hashicorp/terraform
    entrypoint: [""]
  when: manual
  stage: apply
  script:
    - |
      cat << EOF > config.remote.tfbackend
      workspaces { name = "$TFC_WS" }
      hostname     = "$TFC_URL"
      organization = "$TFC_ORG"
      token        = "$(cat vars | grep TFC_TOKEN | cut -d = -f2)"
      EOF
    - terraform --version
    - terraform init -backend-config=config.remote.tfbackend
    - terraform apply -auto-approve

