default:
  image: mskaesz/secured-iac-pipelines-demo:latest

stages:
  - prep
  - plan
  - apply

prep:
  stage: prep
  resource_group: tf
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=${CI_PROJECT_NAME} jwt=${CI_JOB_JWT})"
    - echo "VAULT token is $VAULT_TOKEN"
    - export TFE_TOKEN=$(vault read terraform/creds/${CI_PROJECT_NAME} -format=json | jq -r ".data.token")
    - echo "TFE token is $TFE_TOKEN"
    - echo "TFE_TOKEN=$TFE_TOKEN">>vars
    - echo "TFE WS name is $TFE_WS_NAME"
    - echo "TFE_ORG name is $TFE_ORG!"
    - echo "TFE_ADDRESS name is $TFE_ADDRESS!"
    - tfe-cli variable delete $TFE_WS_NAME vault_azure_secret_backend_path
    - tfe-cli variable delete $TFE_WS_NAME vault_azure_secret_backend_role
    - tfe-cli variable delete $TFE_WS_NAME arm_subscription_id
    - tfe-cli variable delete $TFE_WS_NAME arm_tenant_id
    - tfe-cli variable delete $TFE_WS_NAME gitlab_jwt_token
    - tfe-cli variable delete $TFE_WS_NAME gitlab_jwt_role
    - tfe-cli variable delete $TFE_WS_NAME vault_addr
    - tfe-cli variable delete $TFE_WS_NAME vault_namespace
    - >
      tfe-cli variable create $TFE_WS_NAME \
          --var vault_azure_secret_backend_path=$vault_azure_secret_backend_path \
          --var vault_azure_secret_backend_role=${vault_azure_secret_backend_role} \
          --var arm_subscription_id=${arm_subscription_id} \
          --var arm_tenant_id=${arm_tenant_id} \
          --var gitlab_jwt_token=${CI_JOB_JWT} \
          --var gitlab_jwt_role=${CI_PROJECT_NAME} \
          --var vault_addr=${VAULT_ADDR} \
          --var vault_namespace=${VAULT_NAMESPACE}
  artifacts:
    paths:
      - vars

plan:
  stage: plan
  resource_group: tf
  dependencies:
    - prep
  script:
    - |
      cat << EOF > config.remote.tfbackend
      workspaces { name = "$TFE_WS_NAME" }
      hostname     = "$(echo $TFE_ADDRESS | sed 's/https\?:\/\///')"
      organization = "$TFE_ORG"
      token        = "$(cat vars | grep TFE_TOKEN | cut -d = -f2)"
      EOF
    - terraform --version
    - terraform init -backend-config=config.remote.tfbackend -reconfigure
    - terraform plan
  artifacts:
    paths:
      - config.remote.tfbackend
apply:
  stage: apply
  resource_group: tf
  dependencies:
    - plan
  script:
    - terraform --version
    - terraform init -backend-config=config.remote.tfbackend -reconfigure
    - terraform apply -auto-approve
